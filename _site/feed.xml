<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2019-05-24T19:44:23+05:30</updated><id>/</id><title type="html">Shreyash Agarwal’s Blog</title><subtitle>Hi! My name is Shreyash Agarwal. I love coding. I am interested in the fields of computer vision and machine learning. I was born and brought up in Kolkata, India and I have loved computers since the time I got my hands on them. I also enjoy listening to music!</subtitle><entry><title type="html">A simple Docker walkthrough</title><link href="/2019/05/24/docker-walkthrough.html" rel="alternate" type="text/html" title="A simple Docker walkthrough" /><published>2019-05-24T00:00:00+05:30</published><updated>2019-05-24T00:00:00+05:30</updated><id>/2019/05/24/docker-walkthrough</id><content type="html" xml:base="/2019/05/24/docker-walkthrough.html">&lt;p&gt;According to &lt;a href=&quot;https://www.docker.com/resources/what-container&quot;&gt;the official docker page&lt;/a&gt; -&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A container is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another. A Docker container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries and settings.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Docker helps programmers to deliver their software in a reliable and consistent manner. Since it has everything required to the application it is designed for, it alleviates the problem of “It works on my PC, don’t know why it doesn’t work on yours!”&lt;/p&gt;

&lt;p&gt;Getting started with Docker is as simple as-&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Download docker community edition for your system from the &lt;a href=&quot;https://www.docker.com/products/docker-desktop&quot;&gt;official docker download link&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Install docker on your system.&lt;/li&gt;
  &lt;li&gt;Run Docker on the system.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now if you open up the terminal and type-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;docker version&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You should see something like this-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;Client: Docker Engine - Community
 Version:           18.09.2
 API version:       1.39
 Go version:        go1.10.8
 Git commit:        6247962
 Built:             Sun Feb 10 04:12:39 2019
 OS/Arch:           darwin/amd64
 Experimental:      &lt;span class=&quot;nb&quot;&gt;false

&lt;/span&gt;Server: Docker Engine - Community
 Engine:
  Version:          18.09.2
  API version:      1.39 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;minimum version 1.12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Go version:       go1.10.6
  Git commit:       6247962
  Built:            Sun Feb 10 04:13:06 2019
  OS/Arch:          linux/amd64
  Experimental:     &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We have successfully installed docker onto our system. But now, how do we use this wonderful tool for the benefits of a &lt;em&gt;containerised application&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;Let’s begin with something really simple.
One of the starting points of writing a Dockerised application is writing something called a Dockerfile.
The Dockerfile defines how the containerised application is to be built.&lt;/p&gt;

&lt;p&gt;We shall be calling our application docker-example.
Go to the terminal and create a new project directory and then navigate to it-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; ~/docker-example
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;docker-example&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Suppose we have a program called application.py, a Python3 application that we need to containerise.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;application.py&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;platform&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello! This message is from a container!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The output when the program is run from the computer directly looks like this-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;python3 application.py
Darwin
18.5.0
Hello! This message is from a container!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Open up your favorite text editor and create a file called Dockerfile. You can &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/&quot;&gt;read more about Dockerfiles here&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;Dockerfile&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now edit the contents of the file to this-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-docker&quot; data-lang=&quot;docker&quot;&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; python:3&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /usr/src/app&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; . .&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [ &quot;python&quot;, &quot;application.py&quot; ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once the file is saved, drop back into the terminal and type this command-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;docker build &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; docker-example .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The -t is being used here to &lt;em&gt;tag&lt;/em&gt; the image to the name &lt;em&gt;docker_example&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Docker will download the latest &lt;a href=&quot;https://hub.docker.com/_/python&quot;&gt;python 3 base docker image&lt;/a&gt; first, if it does not exist on your computer.&lt;/p&gt;

&lt;p&gt;After the build is done, you should see an image like this-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;Successfully built 403f70f033e0
Successfully tagged docker-example:latest&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The 403f70f033e0 here is the container id that is built. If we had not specified the tag, it would have only displayed the container id and not the tag.
In that scenario, tagging could be done by-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;docker tag 403f70f033e0 docker-example&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This means our containerised application is ready and we can now run it by the following command-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;docker run docker-example&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We should be seeing an output similar to this-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;Linux
4.9.125-linuxkit
Hello! This message is from a container!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note that the output says Linux even though my system is actually Darwin(MacOS). This means our application is running from the docker container and we can start availing all the benefits listed in the first paragraph of this article.&lt;/p&gt;

&lt;p&gt;And there we have it! A really simple walkthrough to Docker. If you managed to follow all the steps correctly, you have successfully run your first containerised application.&lt;/p&gt;

&lt;p&gt;You can find my repository with all the files required for this walkthrough at &lt;a href=&quot;https://github.com/shreyashag/docker-example&quot;&gt;https://github.com/shreyashag/docker-example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docker is really much much more than this though, and I hope to follow up this article with more detailed articles on this subject.&lt;/p&gt;</content><author><name></name></author><summary type="html">According to the official docker page -</summary></entry><entry><title type="html">Scraping web tables with requests and pandas</title><link href="/web/2018/08/05/scraping-web-tables-with-requests-and-pandas.html" rel="alternate" type="text/html" title="Scraping web tables with requests and pandas" /><published>2018-08-05T00:00:00+05:30</published><updated>2018-08-05T00:00:00+05:30</updated><id>/web/2018/08/05/scraping-web-tables-with-requests-and-pandas</id><content type="html" xml:base="/web/2018/08/05/scraping-web-tables-with-requests-and-pandas.html">&lt;p&gt;Hey everyone,&lt;/p&gt;

&lt;p&gt;It’s been a long time since I posted something, I’ve been busy with work and other things.
I’ve written a lot of scrapes recently and while trying to reduce the code I would have to write, I stumbled upon something.&lt;/p&gt;

&lt;p&gt;Have you heard about &lt;a href=&quot;https://pandas.pydata.org/&quot;&gt;Pandas?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s a fantastic library which not only is useful for maintaining data structures in it’s famous Dataframe, but also helped me cut out BeautifulSoup (another awesome library which I used to use for web parsing) completely!&lt;/p&gt;

&lt;p&gt;Now I just have to use requests and a one-liner from Pandas to read html tables.&lt;/p&gt;

&lt;p&gt;Don’t believe me?
Let’s do this then!&lt;/p&gt;

&lt;p&gt;Here’s the website from which we want the data table.&lt;br /&gt;
&lt;a href=&quot;https://www.w3schools.com/html/html_tables.asp&quot;&gt;W3 Schools HTML Tables&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this is how we can convert the web html table into a usable list of python dictionaries-&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://www.w3schools.com/html/html_tables.asp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;table_records&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pandas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_dates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'customers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'records'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yup, that’s it!&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table_records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here’s the output.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Company'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Alfreds Futterkiste'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Contact'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Maria Anders'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Country'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Germany'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Company'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Centro comercial Moctezuma'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Contact'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Francisco Chang'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Country'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Mexico'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Company'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Ernst Handel'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Contact'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Roland Mendel'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Country'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Austria'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Company'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Island Trading'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Contact'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Helen Bennett'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Country'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'UK'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Company'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Laughing Bacchus Winecellars'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Contact'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Yoshi Tannamuri'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Country'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Canada'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Company'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Magazzini Alimentari Riuniti'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Contact'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Giovanni Rovelli'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Country'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Italy'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If you noticed, there’s a dateparser incorporated into the function call, that will automatically parse strified dates into a nice and convinient pandas Timestamp.&lt;/p&gt;

&lt;p&gt;To get a python date object, we just need to call a .date() method on the Timestamp object.&lt;/p&gt;

&lt;p&gt;Here is a clearer use of this with a function call -&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_html_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;table_records&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pandas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'records'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_records&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://www.w3schools.com/html/html_tables.asp'&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'customers'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;table_records&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_html_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table_records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using this method has greatly cut down on the amount of time and code that would be used to scrape a similar table using BeautifulSoup.&lt;/p&gt;

&lt;p&gt;Any comments? Ideas on how this could be even better? Hit me up on twitter @shreyash_ag!&lt;/p&gt;</content><author><name></name></author><summary type="html">Hey everyone,</summary></entry><entry><title type="html">Pointers for Pipenv</title><link href="/2018/04/09/pointers-for-python.html" rel="alternate" type="text/html" title="Pointers for Pipenv" /><published>2018-04-09T00:00:00+05:30</published><updated>2018-04-09T00:00:00+05:30</updated><id>/2018/04/09/pointers-for-python</id><content type="html" xml:base="/2018/04/09/pointers-for-python.html">&lt;p&gt;Pipenv is a great tool to use, read more about pipenv &lt;a href=&quot;https://github.com/pypa/pipenv&quot;&gt;&lt;strong&gt;HERE&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pipenv generated a lock file that is useful in replicating an exact virutal environment, which can be useful in a lot of cases.&lt;/p&gt;

&lt;p&gt;The best way to install pipenv is to install it using pip but locally, so that all the pipenv environments are also in the .local/ folder inside the user directory.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;pip &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; pipenv&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pipenv works with pew (read more about pew &lt;a href=&quot;https://github.com/berdario/pew&quot;&gt;&lt;strong&gt;HERE&lt;/strong&gt;&lt;/a&gt; ) to create the virtual environments.&lt;/p&gt;

&lt;p&gt;Though pipenv provides the ability to store the virtual environment inside the project folder by setting the &lt;em&gt;VENV_IN_PROJECT&lt;/em&gt; environment variable, I prefer not using it like that. There are a couple of benefits to this -&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;This allows me to keep the codebase isolated from the runtime environment and simply zipping up the code is a much easier process.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Having the virtual environment inside the home directory of the user allows for scheduling cron jobs using the user space where the cron job is consequently able to find the virtual environment.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">Pipenv is a great tool to use, read more about pipenv HERE.</summary></entry><entry><title type="html">Implementing High Scores in Android</title><link href="/2017/08/13/implementing-high-scores-in-android.html" rel="alternate" type="text/html" title="Implementing High Scores in Android" /><published>2017-08-13T00:00:00+05:30</published><updated>2017-08-13T00:00:00+05:30</updated><id>/2017/08/13/implementing-high-scores-in-android</id><content type="html" xml:base="/2017/08/13/implementing-high-scores-in-android.html">&lt;p&gt;To implement high scores in an Android game, there are a few options-&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;To use LocalStorage.&lt;/li&gt;
  &lt;li&gt;To use a DB locally.&lt;/li&gt;
  &lt;li&gt;To use a cloud based DB service, such as FireCloud.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this post I will be describing about how I have implemented highscores for my application QuizApp using LocalStorage. I will be talking about the other two in a later post.&lt;/p&gt;

&lt;p&gt;SharedPreferences is used to setup an acess to key-value pairs that can be stored locally on the device. A key needs to be supplied for identifying the StoredPreferences uniquely, here we are using &lt;strong&gt;myPrefsKey&lt;/strong&gt; as the identifier.&lt;/p&gt;

&lt;p&gt;SharedPreferences differs from Preferences as it can be accessed across activities, which is required nice the Highscore might be required to beaccessible from more than one Activity.&lt;/p&gt;

&lt;p&gt;The high score can be saved in the Preferences by identifying it with a &lt;em&gt;unique&lt;/em&gt; key for high-scores in a similar manner to how we used myPrefsKey to &lt;em&gt;uniquely&lt;/em&gt; identify the Preferences store. I have used &lt;strong&gt;highScore&lt;/strong&gt; as a key for my HighScore key inside the SharedPreferences store.&lt;/p&gt;

&lt;h1 id=&quot;this-is-how-to-set-the-high-score--&quot;&gt;This is how to set the high score -&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setHighScore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedPref&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSharedPreferences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myPrefsKey&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MODE_PRIVATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SharedPreferences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedPref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;edit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;highScore&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WRITTEN highscore&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;to preferences &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A SharedPreferences Editor is required to be called upon our SharedPreferences folder ( which is uniquely identified by myPrefsKey ). On the editor, the putInt method is called to set the score on the high score key ( highScore). &lt;strong&gt;It is important&lt;/strong&gt; to follow up changes made by the editor with a commit call, as it writes the changes to our SharedPreferences store.&lt;/p&gt;

&lt;h1 id=&quot;this-is-how-we-can-get-the-high-score-from-the-sharedpreferences&quot;&gt;This is how we can get the high score from the sharedPreferences.&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getHighScore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SharedPreferences&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedPref&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSharedPreferences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myPrefsKey&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MODE_PRIVATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;highScore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedPref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;highScore&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;getHighScore: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;highScore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;highScore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the latest release of QuizApp (v0.1.1), which has integrated High Scores as I have mentioned here -
&lt;a href=&quot;https://github.com/shreyashag/QuizApp/releases/&quot;&gt;github.com/shreyashag/QuizApp/releases/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am currently thinking about giving the app a fresh look and you contact me on twitter at &lt;a href=&quot;https://twitter.com/shreyash_ag&quot;&gt;@shreyash_ag&lt;/a&gt; if you have any ideas!&lt;/p&gt;</content><author><name></name></author><summary type="html">To implement high scores in an Android game, there are a few options- To use LocalStorage. To use a DB locally. To use a cloud based DB service, such as FireCloud.</summary></entry><entry><title type="html">QuizApp! for Android- What I learned developing my own quiz app</title><link href="/2017/07/28/quizapp-for-android-what-i-learned-developing-my-own-quiz-app.html" rel="alternate" type="text/html" title="QuizApp! for Android- What I learned developing my own quiz app" /><published>2017-07-28T00:00:00+05:30</published><updated>2017-07-28T00:00:00+05:30</updated><id>/2017/07/28/quizapp-for-android-what-i-learned-developing-my-own-quiz-app</id><content type="html" xml:base="/2017/07/28/quizapp-for-android-what-i-learned-developing-my-own-quiz-app.html">&lt;p&gt;I have been using Android for the longest time I can remember, and I have never owned an iPhone. I love the Android platform and the openness it provides. My current device is a OnePlus One that is running Slim7 ROM.&lt;/p&gt;

&lt;p&gt;Android development has been on and off for me, but I was pretty familiar with Android because of my experience working in Ionic framework and a course in my college Curriculum called Mobile Application Development. I thought of creating an App for myself, and here is QuizApp!.&lt;/p&gt;

&lt;p&gt;QuizApp was developed using Android Studio, and how the application works is briefly explained here. The MainActivity asks the user to select the type of Quiz they would like to play. The App then loads the QuizActivity and feteches the quiz from OpenTriviaDatabase.&lt;/p&gt;

&lt;p&gt;The view contains a TextViews for keeping track of score, number of questions and also for the question itself. The answers are present in a set of RadioGroup RadioButtons.&lt;/p&gt;

&lt;div&gt;


    &lt;figure&gt;
        &lt;img class=&quot;my-image&quot; src=&quot;/assets/posts/2017-07-28-quizapp-for-android-what-i-learned-developing-my-own-quiz-app/Screenshot_1.png&quot; width=&quot;300&quot; /&gt;
        &lt;figcaption&gt;Main Activity&lt;/figcaption&gt;
    &lt;/figure&gt;

&lt;/div&gt;

&lt;div&gt;


    &lt;figure&gt;
        &lt;img class=&quot;my-image&quot; src=&quot;/assets/posts/2017-07-28-quizapp-for-android-what-i-learned-developing-my-own-quiz-app/Screenshot_2.png&quot; width=&quot;300&quot; /&gt;
        &lt;figcaption&gt;Selecting the quiz category&lt;/figcaption&gt;
    &lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;When the QuizActivity loads, the layout loads the first question. Subsequently on clicking of the next button, the currently selected answer is checked and the Views are refreshed to contain the next question and the updated score.&lt;/p&gt;

&lt;p&gt;For fetching the API request, I made use of Volley library, as it is well documented in the Android Developer Docs. 
MediaPlayer was used for playing the songs. One issue I encountered was while playing multiple sounds, as soon as the second started, the first would stop playing. The solution to this was to pause the previously playing instance and then play it again after initiating the second playback.&lt;/p&gt;

&lt;div&gt;


    &lt;figure&gt;
        &lt;img class=&quot;my-image&quot; src=&quot;/assets/posts/2017-07-28-quizapp-for-android-what-i-learned-developing-my-own-quiz-app/Screenshot_4.png&quot; width=&quot;300&quot; /&gt;
        &lt;figcaption&gt;The Quiz Activity.. I'm getting better at this, don't worry!&lt;/figcaption&gt;
    &lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Looking Ahead
I have started on the design and am thinking about how to implement Material Design for QuizApp!&lt;/p&gt;

&lt;p&gt;A nicer version of the application would use CardView or RecyclerView (going to be implemented soon) for the main quiz activity.&lt;/p&gt;

&lt;p&gt;Also, the ScoreActivity is very,very,very basic. It literally has just a textview and a button right now. Lots of work to do on the UI! The category selector can be implemented as clickable cards with a background reperesenting the category with a text overlay.&lt;/p&gt;

&lt;div&gt;


    &lt;figure&gt;
        &lt;img class=&quot;my-image&quot; src=&quot;/assets/posts/2017-07-28-quizapp-for-android-what-i-learned-developing-my-own-quiz-app/Screenshot_5.png&quot; width=&quot;300&quot; /&gt;
        &lt;figcaption&gt;The Score Activity&lt;/figcaption&gt;
    &lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;Probably some animated baloons or confetti on the Score screen?  And need to find a better way than using Toast messages to let the users know if they were correct or wrong!&lt;/p&gt;

&lt;p&gt;Managing the LifeCycle and NavigationBar have not been implemented yet and are also on the tasklist.&lt;/p&gt;

&lt;p&gt;I will be updating the app soon and will hopefully be uploading to the Play Store soon too. You can check it out on GitHub here- &lt;a href=&quot;https://github.com/shreyashag/QuizApp&quot;&gt;https://github.com/shreyashag/QuizApp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading and stay tuned!&lt;/p&gt;</content><author><name></name></author><summary type="html">I have been using Android for the longest time I can remember, and I have never owned an iPhone. I love the Android platform and the openness it provides. My current device is a OnePlus One that is running Slim7 ROM.</summary></entry><entry><title type="html">How I got HTTPS for free for my domain</title><link href="/2017/07/21/how-i-got-https-for-free-for-my-domain.html" rel="alternate" type="text/html" title="How I got HTTPS for free for my domain" /><published>2017-07-21T00:00:00+05:30</published><updated>2017-07-21T00:00:00+05:30</updated><id>/2017/07/21/how-i-got-https-for-free-for-my-domain</id><content type="html" xml:base="/2017/07/21/how-i-got-https-for-free-for-my-domain.html">&lt;p&gt;Getting https in important in today’s world, it conveys authenticity and trust to the user visiting a website. From &lt;a href=&quot;https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https&quot;&gt;what Google has to say about HTTPS&lt;/a&gt;-&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;HTTPS protects the integrity of your website&lt;/li&gt;
  &lt;li&gt;HTTPS protects the privacy and security of your users&lt;/li&gt;
  &lt;li&gt;HTTPS is the future of the web&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;how-can-you-get-https-for-free&quot;&gt;How can you get HTTPS for free?&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Go to &lt;a href=&quot;https://www.cloudflare.com/a/sign-up&quot;&gt;Cloudflare.com&lt;/a&gt; and create a new account.&lt;/li&gt;
  &lt;li&gt;After creating your account, register your domain name with Cloudflare. This can be done with a free plan for personal use.  DNS Records will be imported to Cloudflare when the domain is added. We need to ensure that we have enabled DNS and HTTP proxy for our records.&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;


    &lt;figure&gt;
        &lt;img class=&quot;my-image&quot; src=&quot;/assets/posts/2017-07-21-how-i-got-https-for-free-for-my-domain/cloudflare.png&quot; /&gt;
        &lt;figcaption&gt;This (the orange cloud) means that we are using the CDN provided by Cloudflare for our domain.&lt;/figcaption&gt;
    &lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;In this step, you will also need to update the nameservers of the domain name to the ones provided by cloudflare. To do this, you will need to go to the control panel of your domain name registrar and edit the nameservers. For my domain it looks like this in the Godaddy&amp;gt;Manage Domains&amp;gt;Manage DNS&amp;gt;Nameservers.&lt;/p&gt;
&lt;div&gt;


    &lt;figure&gt;
        &lt;img class=&quot;my-image&quot; src=&quot;/assets/posts/2017-07-21-how-i-got-https-for-free-for-my-domain/godaddy-nameservers.png&quot; /&gt;
        &lt;figcaption&gt;This is how it looks on my GoDaddy Control panel&lt;/figcaption&gt;
    &lt;/figure&gt;

&lt;/div&gt;

&lt;p&gt;This will probably take some time to reflect across the different servers across the world. This is called DNS Propogation. To learn more about DNS Propogation, &lt;a href=&quot;&quot;&gt;click here&lt;/a&gt;. You can check the propogation status using some tool. Here is a website which I used &lt;a href=&quot;https://www.whatsmydns.net/#NS/shreyashagarwal.in&quot;&gt;What’s My DNS&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Once that is done, inside the Cloudflare panel, you need to go to the Crypto tab, and set SSL to flexible. I haven’t tried setting it to a higher setting as of now, and it works in the setup I am using.&lt;br /&gt;
Also set the  Always Use HTTPS slider to On.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it! In some time, the DNS servers will now point to Cloudflare for your domain name and Cloudflare will also have activated HTTPS for the domain name. You can start using https in your domain!&lt;/p&gt;

&lt;p&gt;Here are a few other things you can do using Cloudflare-&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Enable DNSSEC - DNSSEC protects against forged DNS answers. DNSSEC protected zones are cryptographically signed to ensure the DNS records received are identical to the DNS records published by the domain owner.&lt;/li&gt;
  &lt;li&gt;Enable caching, I’ve implemented a rule in Cloudflare to do this, 3 rules can be setup in Cloudflare.&lt;/li&gt;
  &lt;li&gt;Auto-minify code for HTML, CSS and JS files.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We need to keep in mind that our domain will be served using CDN of Cloudflare. We got HTTPS for free and our now serving our pages using CDN, that can also provide for caching . Hooray!&lt;/p&gt;

&lt;p&gt;I mentioned about my setup here, and I am using Jekyll and GitHub Pages which can be read on &lt;a href=&quot;/introduction/2017/07/19/welcome-to-my-blog.html&quot;&gt;my previous blog post.&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Getting https in important in today’s world, it conveys authenticity and trust to the user visiting a website. From what Google has to say about HTTPS- HTTPS protects the integrity of your website HTTPS protects the privacy and security of your users HTTPS is the future of the web</summary></entry><entry><title type="html">Welcome to My Blog!</title><link href="/introduction/2017/07/19/welcome-to-my-blog.html" rel="alternate" type="text/html" title="Welcome to My Blog!" /><published>2017-07-19T00:00:00+05:30</published><updated>2017-07-19T00:00:00+05:30</updated><id>/introduction/2017/07/19/welcome-to-my-blog</id><content type="html" xml:base="/introduction/2017/07/19/welcome-to-my-blog.html">&lt;p&gt;Hello and welcome to my blog. You can read more about me &lt;a href=&quot;http://shreyashagarwal.in/personal-page/about&quot;&gt;here&lt;/a&gt;. I have previously used blogs on wordpress and blogger. On wordpress to write a blog called Pi2Projects, where I wrote about my experiments with the Raspberry Pi 2. I have pulled the blog down, and now this blog will be my main blogging medium now.&lt;/p&gt;

&lt;p&gt;Speaking of medium, I also have a profile there, you can follow me &lt;a href=&quot;https://medium.com/@shreyashag&quot;&gt;@shreyashag&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am using Jekyll to write this blog, which is a new experience for me but the workflow is a lot of fun. The post is written in Markdown format, and a commit generates the site for me thanks to Github Pages.
I may consider moving the blog off Github Pages, because of some of the limitations of using Jekyll on Github Pages, such as being able to use only gems that are whitelisted by GitHub Pages. However, that will only happen when I need such functionality.
Moreover, Jekyll provides for programmability, so if the functionality is not too complex, I’ll probably code it myself or search for it on the net.&lt;/p&gt;

&lt;p&gt;Jekyll is actively developed and has a huge following. Despite having to use a Ruby environment (something I am new to), I am so far finding the experience fun.&lt;/p&gt;

&lt;p&gt;I also developed a webpage for myself, that can be opened by clicking on my name at the header on this page. (Or you can click on &lt;a href=&quot;https://shreyashagarwal.in/personal-page&quot;&gt;https://shreyashagarwal.in/personal-page&lt;/a&gt;). I used Typed.Js for the slick typing animation on the homepage and the design was using the Bootstrap Cover template ( which can be found in the examples folder of the Bootstrap source folder on github).&lt;/p&gt;

&lt;p&gt;Oh and when you see the webpage, check out the awesome social icons at the bottom. They were designed using Font-Awesome. Also follow me on twitter! &lt;a href=&quot;https://twitter.com/shreyash_ag&quot;&gt;@shreyash_ag&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;More posts coming soon, and in the next one I’m going to explain how I got https for my domain for free!&lt;/p&gt;</content><author><name></name></author><summary type="html">Hello and welcome to my blog. You can read more about me here. I have previously used blogs on wordpress and blogger. On wordpress to write a blog called Pi2Projects, where I wrote about my experiments with the Raspberry Pi 2. I have pulled the blog down, and now this blog will be my main blogging medium now.</summary></entry></feed>